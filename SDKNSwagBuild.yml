parameters:
  swaggerSaveLocation: ''
  rootNamespace: ''
  classOutputFolder: ''
  projectPath: ''
  versionMajor: null
  versionMinor: null
  versionPatch: null
  versionSuffix: null
  jsonVersion: 'V1'
  clientClassName: null
  jsonLibrary: 'SystemTextJson'

steps:
- task: Npm@1
  displayName: 'Install nswag'
  inputs:
    command: custom
    verbose: false
    customCommand: 'install  nswag'

- task: CmdLine@2
  displayName: 'Generate Client Classes'
  inputs:
    script: npx nswag openapi2csclient /input:${{parameters.swaggerSaveLocation}} /classname:${{parameters.clientClassName}} /namespace:"${{parameters.rootNamespace}}.${{parameters.jsonVersion}}" /output:${{parameters.classOutputFolder}}/${{parameters.rootNamespace}}.cs  /contractsNamespace:"${{parameters.rootNamespace}}.${{parameters.jsonVersion}}.Models" /ContractsOutput:${{parameters.classOutputFolder}}/${{parameters.clientClassName}}.${{parameters.jsonVersion}}.Models.cs /generateClientInterfaces:true /generateContractsOutput:true /jsonLibrary:${{parameters.jsonLibrary}} /dateTimeType:System.DateTime /dateType:System.DateTime /arrayType:System.Collections.Generic.IList

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: build
    projects: ${{parameters.projectPath}}

- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: custom
    custom: pack
    arguments: '${{parameters.projectPath}}  -p:PackageVersion=${{parameters.versionMajor}}.${{parameters.versionMinor}}.${{parameters.versionPatch}}${{parameters.versionSuffix}} --output  $(Build.ArtifactStagingDirectory)'


- task: DotNetCoreCLI@2
  displayName: 'dotnet push external'
  inputs:
    command: push
    publishVstsFeed: 'e1a5976c-c650-44c0-b22d-9381a3ba10bf'
  
- task: DotNetCoreCLI@2
  displayName: 'dotnet push internal'
  inputs:
    command: push
    publishVstsFeed: 'cfc27a80-26d5-49fb-bd05-368b81520bbe'